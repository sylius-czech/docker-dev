server {
    root /srv/sylius/public;
    listen *:80;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        resolver 127.0.0.11 valid=10s ipv6=off;
        set $backendfpm "php-sylius-app-dev:9000";
        # Comment the next line and uncomment the next to enable dynamic resolution (incompatible with Kubernetes);
        fastcgi_pass $backendfpm;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        #resolver 127.0.0.11;
        #set $upstream_host php;
        #fastcgi_pass $upstream_host:9000;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

   # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    # Newly every file-like URL (with suffix), which does not point to real file, ends with 404
    location ~ ^(?!/admin/).+[.][^.]+$ {
        if ($http_accept ~* ^application/json.*) {
            # configure custom response content for 404
            error_page 404 = @404_json;
        }
        try_files $uri =404;
    }

    location @404_json {
        default_type application/json;
        return 404 '{"code":"404", "message": "File Not Found"}';
    }

    client_max_body_size 6m;
}
